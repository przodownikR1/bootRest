buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
          }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}'
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE'
        classpath 'org.springframework:springloaded:1.2.5.RELEASE'
    }
}


apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

ext {
    springDataVersion = 'Fowler-RELEASE'
    springVersion = '4.2.4.RELEASE'
     hibernateVersion = "5.0.2.Final"
     javaxValidationVersion = "1.1.0.Final"
     hibernateValidatorVersion = "5.0.3.Final"
     lombokVersion = "1.16.4"
     cucumberVersion = "1.2.2"
     apacheHttpVersion = "4.5"
     gatlingVersion = "2.1.4"
     
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework:spring-framework-bom:4.2.4.RELEASE'
        mavenBom "org.springframework.data:spring-data-releasetrain:${springDataVersion}"
    }
}



configurations {
    springLoaded
}

task springLoaded(type: Copy) {
    from configurations.springLoaded
    into "${buildDir}/springloaded"
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
       // compile('org.springframework.boot:spring-boot-starter-data-rest')
       // compile('org.springframework.data:spring-data-rest-hal-browser')
       // compile('org.springframework.boot:spring-boot-devtools')
       // compile('org.springframework.boot:spring-boot-starter-redis')
       // compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.projectlombok:lombok:1.16.6')
   
    compile('org.springframework.retry:spring-retry')

    compile('org.springframework.session:spring-session')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
    
    compile 'redis.clients:jedis:2.1.0'
    
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.2'
    
    compile 'org.springframework:spring-core'
    compile 'org.springframework:spring-beans'
    compile 'org.springframework:spring-context'
    compile 'org.springframework:spring-orm'
    compile 'org.springframework:spring-tx'
    compile 'org.springframework:spring-aop'
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'com.google.guava:guava:18.0'
   
    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'org.hibernate:hibernate-validator:5.2.2.Final'
    compile 'org.hibernate:hibernate-core:5.0.2.Final'
    compile 'org.hibernate:hibernate-entitymanager:5.0.2.Final'
    compile 'javax.money:money-api:1.0'
    compile 'org.javamoney:moneta:1.0'
   
    compile 'org.lazyluke:log4jdbc-remix:0.2.7'
    compile 'com.h2database:h2'
    compile 'org.webjars:bootstrap:3.3.5'
    compile 'org.webjars:jquery:2.1.4'
    compile 'org.webjars:jquery-ui:1.11.4'
    compile 'org.webjars:jquery-ui-themes:1.11.4'
    compile ("org.webjars.bower:jquery.bootgrid:1.2.0") {
        exclude group: 'org.webjars.bower'
    }
    //compile 'com.github.tomakehurst:wiremock:1.57'
    
    compile 'org.codehaus.groovy:groovy-all:2.4.5'
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'org.apache.httpcomponents:httpclient:4.5'
    compile 'org.apache.httpcomponents:fluent-hc:4.5'
    
    compile("org.apache.activemq:activemq-client")
    compile("org.apache.xbean:xbean-spring:4.2") {
        exclude module: "org.springframework:spring"
    }
    compile("org.springframework:spring-jms:4.2.4.RELEASE")
    compile("org.apache.activemq:activemq-broker:5.11.1")
    
  //  jpametamodel ('org.hibernate:hibernate-jpamodelgen:5.0.6.Final')
    
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'com.jayway.jsonpath:json-path'
    testCompile 'junit:junit'
    testCompile 'org.assertj:assertj-core:3.2.0'
    testCompile 'com.jayway.awaitility:awaitility-java8:1.6.1'
    testCompile 'com.jayway.awaitility:awaitility:1.6.5'
 
   
    testCompile 'org.springframework.boot:spring-boot-starter-test'
   
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7+'
    testCompile 'net.sf.json-lib:json-lib:2.4:jdk15'
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc:1.0.0.RELEASE')
    springLoaded 'org.springframework:springloaded:1.2.5.RELEASE'
    
}



test {
    systemProperties 'property': 'value'
    testLogging.showStandardStreams = true
}

configurations {
    all*.exclude group: "commons-logging", module: "commons-logging"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.springframework') {
            details.useVersion '4.2.4.RELEASE'
        }
       if (details.requested.group == 'org.springframework.security') {
            details.useVersion '4.0.3.RELEASE'
        }
        if (details.requested.group == 'org.hibernate') {
            details.useVersion '5.0.2.Final'
        }
    }

}