import org.apache.tools.ant.filters.*

buildscript {
    ext { springBootVersion = '1.5.2.RELEASE' }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
    	classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")        
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE'
         classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:1.2"
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.7")
    }
}
plugins {
    id "org.sonarqube" version "2.0.1"
}


apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'

apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'org.sonarqube'



gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/src/main/resources")
}



jar {
    baseName = 'bootRest'
    version = '0.1.0-SNAPSHOT'
}

repositories { mavenCentral() }


sourceCompatibility = 1.8
targetCompatibility = 1.8




sourceSets {
    intTest
    generated.java.srcDirs=['src/main/generated']
    main {
        java { srcDir 'src/main/java' }
        groovy { srcDir 'src/main/groovy' }
        resources { srcDir 'src/main/resources' }
    }
    test {
        java { srcDir 'src/test/java' }
        groovy { srcDir 'src/test/groovy' }
        resources { srcDir 'src/test/resources' }
    }
}


configurations {
    providedRuntime
    jpametamodel
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile 'org.springframework.session:spring-session:1.0.2.RELEASE'
    compile 'redis.clients:jedis:2.1.0'
   // compile 'org.springframework.boot:spring-boot-starter-data-rest'
  //  compile('org.springframework.data:spring-data-rest-hal-browser')

    compile('org.springframework.boot:spring-boot-starter-logging')

    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // compile('org.springframework.data:spring-data-rest-hal-browser')
    //  compile('org.springframework.data:spring-data-rest-webmvc:2.4.1.RELEASE')
    // compile("org.springframework.boot:spring-boot-starter-data-rest")

    compile 'org.springframework.hateoas:spring-hateoas:0.19.0.RELEASE' //19 problem  Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]
    //n: Error creating bean with name 'halObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/data/rest/SpringBootRepositoryRestMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]:
    //compile 'org.springframework.data:spring-data-rest-webmvc'

    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.2'


    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.5.0'
    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.5.0'

    compile 'org.springframework:spring-core'
    compile 'org.springframework:spring-beans'
    compile 'org.springframework:spring-context'
    compile 'org.springframework:spring-orm'
    compile 'org.springframework:spring-tx'
    compile 'org.springframework:spring-aop'
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'com.google.guava:guava:18.0'


    compile 'javax.validation:validation-api:1.1.0.Final'
    compile 'org.hibernate:hibernate-validator:5.2.2.Final'
    compile 'org.hibernate:hibernate-core:5.0.2.Final'
    compile 'org.hibernate:hibernate-entitymanager:5.0.2.Final'
    compile 'javax.money:money-api:1.0'
    compile 'org.javamoney:moneta:1.0'

    compile 'org.lazyluke:log4jdbc-remix:0.2.7'
    compile 'com.h2database:h2'
    compile 'com.google.guava:guava:18.0'
    compile 'org.webjars:bootstrap:3.3.5'
    compile 'org.webjars:jquery:2.1.4'
    compile 'org.webjars:jquery-ui:1.11.4'
    compile 'org.webjars:jquery-ui-themes:1.11.4'
    compile ("org.webjars.bower:jquery.bootgrid:1.2.0") { exclude group: 'org.webjars.bower' }
    //compile 'com.github.tomakehurst:wiremock:1.57'

    compile 'org.codehaus.groovy:groovy-all:2.4.5'
    compile 'com.fasterxml.jackson.core:jackson-databind'



    compile 'org.apache.httpcomponents:httpclient:4.5'
    compile 'org.apache.httpcomponents:fluent-hc:4.5'


    compile("org.apache.activemq:activemq-client")
    compile("org.apache.xbean:xbean-spring:4.2") { exclude module: "org.springframework:spring" }
    compile("org.springframework:spring-jms:4.1.7.RELEASE")
    compile("org.apache.activemq:activemq-broker:5.11.1")

    jpametamodel ('org.hibernate:hibernate-jpamodelgen:5.0.6.Final')



    // https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder
    runtime group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.7'


    //metrics
    
    // https://mvnrepository.com/artifact/com.ryantenney.metrics/metrics-spring
    compile group: 'com.ryantenney.metrics', name: 'metrics-spring', version: '3.1.3'
    

    // https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-core
    compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: '3.1.2'

    // https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-jvm
    compile group: 'io.dropwizard.metrics', name: 'metrics-jvm', version: '3.1.2'


    // https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-graphite
    compile group: 'io.dropwizard.metrics', name: 'metrics-graphite', version: '3.1.2'


    // https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-logback
    compile group: 'io.dropwizard.metrics', name: 'metrics-logback', version: '3.1.2'

    // https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-annotation
    compile group: 'io.dropwizard.metrics', name: 'metrics-annotation', version: '3.1.2'

    // https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-servlets
    compile group: 'io.dropwizard.metrics', name: 'metrics-servlets', version: '3.1.2'

    // https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-servlet
    compile group: 'io.dropwizard.metrics', name: 'metrics-servlet', version: '3.1.2'


    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'com.jayway.jsonpath:json-path'
    testCompile 'junit:junit'
    testCompile 'org.assertj:assertj-core:3.2.0'
    testCompile 'com.jayway.awaitility:awaitility-java8:1.6.1'
    testCompile 'com.jayway.awaitility:awaitility:1.6.5'
    testCompile 'org.springframework:spring-test'

    //   testCompile 'info.cukes:cucumber-junit:1.2.2'
    //   testCompile 'info.cukes:cucumber-spring:1.2.2'
    //    testCompile 'io.gatling:gatling-app:2.1.4'
    //    testCompile 'io.gatling.highcharts:gatling-charts-highcharts:2.1.4'

    testCompile 'org.springframework.boot:spring-boot-starter-test'

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7+'
    testCompile 'net.sf.json-lib:json-lib:2.4:jdk15'
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc:1.0.0.RELEASE')

}
test {
    systemProperties 'property': 'value'
    testLogging.showStandardStreams = true
}

configurations {
    all*.exclude group: "commons-logging", module: "commons-logging"
}


task generateMetaModel(type: JavaCompile, group: 'build', description: 'metamodel generate') {

    source = sourceSets.main.java
    classpath = configurations.compile + configurations.jpametamodel
    options.compilerArgs = ["-proc:only"]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()

    doFirst {
        logger.warn("Prepare dictionary structures  " +sourceSets.generated.java.srcDirs)
        //delete(sourceSets.generated.java.srcDirs)
        //sourceSets.generated.java.srcDirs.mkdirs()
    }
}
compileJava.dependsOn generateMetaModel
compileJava.source sourceSets.generated.java, sourceSets.main.java

afterEvaluate {
    configure(allProcessResourcesTasks()) {
        filter(ReplaceTokens,
        tokens: [
            baseName: project.jar.baseName,
            version: project.jar.version,
            gradleVersion: project.gradle.gradleVersion,
            username: System.properties['user.name'],
            buildDate: new Date().format("yyyy-MM-dd HH:mm")]
        )
    }
}
def allProcessResourcesTasks() {
    sourceSets*.processResourcesTaskName.collect { tasks[it] }
}
