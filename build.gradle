buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
          }
    }
    dependencies { 
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE'
        classpath 'org.sonarqube.gradle:gradle-sonarqube-plugin:1.1'
        classpath 'gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.7'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.8'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
        classpath 'org.springframework:springloaded:1.2.5.RELEASE'
    }
}
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply from : 'gradle/jar.gradle'
//apply from : 'gradle/git.gradle'
//apply from : 'gradle/jpagen.gradle'
//apply from : 'gradle/props.gradle'
apply from : 'gradle/depencencies.gradle'
//apply from : 'gradle/sonar.gradle'
//apply from : 'gradle/quality.gradle'
//apply from : 'gradle/coverage.gradle'

/*configurations { springLoaded }



dependencies {
    springLoaded 'org.springframework:springloaded:1.2.5.RELEASE'
}
bootRun {
    def springLoadedFile = configurations.springLoaded.find
    println 'A message which is logged at QUIET level   ' + springLoadedFile
  
    
     { it.name == "springloaded-1.2.5.RELEASE.jar" }
     jvmArgs "-javaagent:$springLoadedFile", "-noverify"
     
     if (project.hasProperty('jvmArgs')) {
         jvmArgs project.jvmArgs.split('\\s+')
     }
 }*/
sourceSets {
    intTest
    generated.java.srcDirs=['src/main/generated']
    main {
        java { srcDir 'src/main/java' }
        groovy { srcDir 'src/main/groovy' }
        resources { srcDir 'src/main/resources' }
    }
    test {
        java { srcDir 'src/test/java' }
        groovy { srcDir 'src/test/groovy' }
        resources { srcDir 'src/test/resources' }
    }
}





test {
    if (gradle.startParameter.taskNames.find { ['integTest', 'release'].contains(it) })
      systemProperty 'integTest', 'true'
      maxHeapSize = '1024m'
      
}





