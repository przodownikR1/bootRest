buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
          }
    }
    dependencies { 
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE'
        classpath 'org.sonarqube.gradle:gradle-sonarqube-plugin:1.1'
        classpath 'gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.7'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.8'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'

        //classpath "gradle.plugin.de.timroes.gradle:git-version:0.3.0"
        classpath 'org.ajoberstar:gradle-git:1.3.2'
       // classpath 'org.springframework:springloaded:1.2.5.RELEASE'
    }
}

apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply from : 'gradle/jar.gradle'
apply from : 'gradle/increase.gradle'
apply from : 'gradle/git.gradle'
//apply from : 'gradle/jpagen.gradle'
apply from : 'gradle/props.gradle'
apply from : 'gradle/depencencies.gradle'
apply from : 'gradle/sonar.gradle'
//apply from : 'gradle/quality.gradle'
//apply from : 'gradle/coverage.gradle'




processResources {
    filesMatching('application.properties') {
        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
            'info.app.version': project.property('version') + '-' + git.head().abbreviatedId
        ]
    }
}

test {
    if (gradle.startParameter.taskNames.find { ['integTest', 'release'].contains(it) })
      systemProperty 'integTest', 'true'
      maxHeapSize = '1024m'      
}